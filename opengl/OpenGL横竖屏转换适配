若顶点数组定义为归一化设备坐标（-1，1）。则横竖屏切换时，图像的宽高比将会发生变化，造成图像变形。
方法一：
调用者计算屏幕宽高比，在归一化设备坐标中手动调整宽高值。

缺陷：需要动态修改矩阵坐标，并且依赖于矩阵定义的形式，拓展性不强。

方法二：
将顶点定义到虚拟坐标空间中，再由正交投影矩阵将其转换到归一化设备坐标。

优点：不需要动态修改矩阵坐标，拓展性、鲁棒性较强。

OpenGL中的正交投影矩阵：
{
	2/(r-l),	0,		 0, 		-(r+l)/(r-l),
	0,			2/(t-b), 0, 		-(t+b)/(t-b),
	0,			0, 		 -2/(f-n), 	-(f+n)/(f-n),
	0,			0,		 0,			1
}

效果：
将向量映射到最大范围为[-1,1]的坐标系中

验证过程（以x分量举例）：
1、首先将x映射到最大范围为(r-l)的[-n,n]坐标中：x-(r+l)/2 = (2x-(r+l))/2
2、再将最大范围从[-n,n]映射至[-1,1]：(2x-(r+l))/2 * (2/(r-l)) = (2x-(r+l))/(r-l)
3、可以发现向量[x,y,z,1]乘以正交投影矩阵得到的结果与步骤二是一致的

z轴多了个负号，因为归一化设备坐标默认使用左手坐标系统（左手大拇指只想x轴正方向，食指指向y轴正方向，中指指向z轴正方向），而opengl默认使用右手坐标系统，所以要反转z轴


最终解决思路：
在竖屏下，拓展高度范围至[-ratio, ratio] (ratio = 屏幕高度/宽度)
在横屏下，拓展宽度范围至[-ratio, ratio] (ratio = 屏幕宽度/高度)

再将该坐标系乘以正交投影矩阵，将坐标系转换到归一化设备坐标。